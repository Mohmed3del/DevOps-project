app:
  name: go-app
  replicaCount: 2
  minreplicas: 2
  maxreplicas: 5
  average_utilization: 70
  image:
    repo_app: 889149267524.dkr.ecr.us-east-1.amazonaws.com/go_app
    tag_app: 1.0.0-1
  containerport: "9090"
  serviceport: "80"
  Docker_secret: ecr-secret
  CPU: 
    Min: 100m
    Max: 200m
  Memory:
    Min: 50Mi
    Max: 100Mi
  
  env:
    - name: MYSQL_PORT
      value: "3306"
    
    - name: MYSQL_USER
      valueFrom:
        secretKeyRef:
          name: db-credentials
          key: username
    
    - name: MYSQL_PASS
      valueFrom:
        secretKeyRef:
          name: db-credentials
          key: password

    - name: MYSQL_DATABASE
      value: "inernship"
    
    - name: MYSQL_HOST
      value: mysql-headless
      


DB:
  replicaCount: 2
  minreplicas: 2
  maxreplicas: 5
  average_utilization: 70
  name: mysql
  image:
    name: mysql
    tag: "8.0"
  volumeclaimtemplates:
    name: mysqldb
  volumemount:
    Path: /var/lib/mysql
  username: m3del
  password: p@ssw0rd
  root_password: root_pass
  containerport: "3306"
  serviceport: "3306"
  CPU: 
    Min: 100m
    Max: 200m
  Memory:
    Min: 50Mi
    Max: 100Mi


storageclass:
  name: "ebs-storage"
  accessmodes: ReadWriteOnce
  storage: 1Gi
  provisioner: kubernetes.io/aws-ebs
  reclaimPolicy: Delete
  allowVolumeExpansion: true 
  volumeBindingMode: WaitForFirstConsumer
  type: gp2

ingress:
  name: go-app-ingress
  host: go-app.duckdns.org # Replace with your domain
  class: nginx
  secretname: app-tls-secret

clusterissuer: 
  name: letsencrypt-prod
  server: https://acme-v02.api.letsencrypt.org/directory

env:
  - name: MYSQL_USER
    valueFrom:
      secretKeyRef:
        name: db-credentials
        key: username
  
  - name: MYSQL_PASSWORD
    valueFrom:
      secretKeyRef:
        name: db-credentials
        key: password
  
  - name: MYSQL_ROOT_PASSWORD
    valueFrom:
      secretKeyRef:
        name: db-credentials
        key: root_password
      
  - name:  MYSQL_DATABASE
    value: "internship"
